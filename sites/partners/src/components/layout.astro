---
import '@lwj/design-system/css/typography.css';

const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="https://www.learnwithjason.dev/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="https://www.learnwithjason.dev/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="https://www.learnwithjason.dev/favicon-16x16.png"
		/>
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<slot />
	</body>
</html>

<style is:global>
	* {
		box-sizing: border-box;
	}

	:root {
		--white: white;
		--black: oklch(17.7% 0.105 262.48);
		--black-desaturated: oklch(16.29% 0.015 262.48);
		--purple: oklch(60% 0.307 294.7);
		--orange: oklch(60% 0.177 64.65);
		--yellow: oklch(60% 0.2247 109.08);
		--blue: oklch(60% 0.1664 237.06);
		--black-alpha-50: color-mix(in oklch, var(--black), transparent);
		--text: color-mix(in oklch, var(--black), var(--white) 85%);

		--vignette-gradient: radial-gradient(
			circle,
			color-mix(in oklch, var(--black), transparent 20%),
			color-mix(in oklch, var(--black), transparent 5%)
		);
		--conic-gradient: conic-gradient(
			in oklch from var(--gradient-angle),
			var(--purple),
			var(--orange),
			var(--yellow),
			var(--blue),
			var(--purple)
		);
	}

	html {
		font-family: jwf, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
			Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
			sans-serif;
		font-size: 14px;
		font-weight: 400;
		line-height: 1.45;

		@media (min-width: 450px) {
			font-size: 18px;
		}
	}

	body {
		margin: 0;
	}

	@property --gradient-angle {
		inherits: false;
		initial-value: 0deg;
		syntax: '<angle>';
	}

	@keyframes spin {
		to {
			--gradient-angle: 360deg;
		}
	}

	@keyframes reveal {
		from {
			opacity: 0;
			transform: translateY(25dvh);
		}

		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	.button {
		animation: spin 6s linear infinite;
		display: block;
		background: var(--vignette-gradient) padding-box,
			conic-gradient(
					in oklch from var(--gradient-angle),
					var(--purple),
					var(--orange),
					var(--yellow),
					var(--blue),
					var(--purple)
				)
				border-box;
		border: 2px solid transparent;
		border-radius: 0.5rem;
		color: var(--white);
		font-family: jwf, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
			Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
			sans-serif;
		font-size: clamp(1rem, 4cqw, 2.5rem);
		font-weight: 900;
		margin: 1.5rem auto;
		padding: 1rem 2rem;
		position: relative;
		text-decoration: none;
		text-shadow: 0 0.2rem 0.5rem var(--black);
		text-transform: uppercase;
		transition: border 0.2s linear;

		/* @media (min-width: 400px) {
			font-size: clamp(1.5rem, 1rem + 3cqw, 2.5rem);
		} */

		& span {
			position: relative;
			z-index: 10;
		}

		&::before {
			--bg-color: var(--orange);

			background: var(--vignette-gradient), var(--bg-color);
			border-radius: 0.75rem;
			content: '';
			inset: 0;
			position: absolute;
			transition: 0.2s linear all;
			z-index: 5;
		}

		&::after {
			animation: spin 6s linear infinite;
			background: conic-gradient(
				in oklch from var(--gradient-angle),
				var(--purple),
				var(--orange),
				var(--yellow),
				var(--blue),
				var(--purple)
			);
			border-radius: 0.75rem;
			content: '';
			filter: blur(3rem);
			inset: 0;
			opacity: 0.75;
			position: absolute;
			transition: 0.2s linear all;
			z-index: 1;
		}

		&:is(:hover, :focus) {
			&::before {
				--bg-color: var(--blue);
			}

			&::after {
				filter: blur(2rem);
			}
		}
	}
</style>
